Terminals unused in grammar

   TOKEN_WHILE
   TOKEN_ERROR


State 38 conflicts: 6 shift/reduce
State 39 conflicts: 2 shift/reduce
State 40 conflicts: 3 shift/reduce
State 41 conflicts: 1 shift/reduce
State 51 conflicts: 2 shift/reduce
State 53 conflicts: 2 shift/reduce
State 82 conflicts: 6 shift/reduce
State 83 conflicts: 2 shift/reduce
State 84 conflicts: 3 shift/reduce
State 85 conflicts: 3 shift/reduce
State 86 conflicts: 1 shift/reduce
State 87 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: globals

    2 globals: global globals
    3        | %empty

    4 global: var_decl TOKEN_SEMI
    5       | function_decl

    6 var_decl: identifier TOKEN_COLON atomic_type
    7         | identifier TOKEN_COLON atomic_type TOKEN_ASSIGN expr
    8         | identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type
    9         | identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type TOKEN_ASSIGN array_init

   10 length: TOKEN_LITERAL_INT

   11 array_init: TOKEN_LBRACE val_list TOKEN_RBRACE

   12 val_list: literal
   13         | literal TOKEN_COMMA val_list

   14 function_decl: identifier TOKEN_COLON TOKEN_FUNCTION return_type TOKEN_LPAREN params TOKEN_RPAREN TOKEN_SEMI
   15              | identifier TOKEN_COLON TOKEN_FUNCTION return_type TOKEN_LPAREN params TOKEN_RPAREN TOKEN_ASSIGN function_def

   16 function_def: stmt_block

   17 params: param_list
   18       | %empty

   19 param_list: param
   20           | param TOKEN_COMMA param_list

   21 param: identifier TOKEN_COLON atomic_type
   22      | identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET TOKEN_RBRACKET atomic_type

   23 stmts: stmt
   24      | stmt stmts

   25 stmt: function_call TOKEN_SEMI
   26     | var_decl TOKEN_SEMI
   27     | assignment TOKEN_SEMI
   28     | postfix TOKEN_SEMI
   29     | print_stmt TOKEN_SEMI
   30     | if_stmt
   31     | for_stmt
   32     | stmt_block
   33     | return_stmt TOKEN_SEMI

   34 stmt_block: TOKEN_LBRACE stmts TOKEN_RBRACE
   35           | TOKEN_LBRACE TOKEN_RBRACE

   36 function_call: identifier TOKEN_LPAREN args TOKEN_RPAREN

   37 args: arg_list
   38     | %empty

   39 arg_list: arg
   40         | arg TOKEN_COMMA arg_list

   41 arg: expr

   42 assignment: identifier TOKEN_ASSIGN expr
   43           | array_element TOKEN_ASSIGN expr

   44 identifier: TOKEN_IDENT

   45 expr: expr logical_op lo_expr
   46     | lo_expr

   47 lo_expr: lo_expr relational_op pm_expr
   48        | pm_expr

   49 pm_expr: pm_expr TOKEN_PLUS term
   50        | pm_expr TOKEN_MINUS term
   51        | term

   52 term: term TOKEN_MUL expon
   53     | term TOKEN_DIV expon
   54     | term TOKEN_MOD expon
   55     | expon

   56 expon: expon TOKEN_EXPONENTIATION factor
   57      | factor

   58 factor: TOKEN_MINUS expr
   59       | TOKEN_LPAREN expr TOKEN_RPAREN
   60       | identifier
   61       | literal
   62       | not
   63       | array_element
   64       | function_call

   65 not: TOKEN_NOT expr

   66 array_element: identifier TOKEN_LBRACKET expr TOKEN_RBRACKET

   67 if_stmt: TOKEN_IF TOKEN_LPAREN expr TOKEN_RPAREN stmt
   68        | TOKEN_IF TOKEN_LPAREN expr TOKEN_RPAREN stmt TOKEN_ELSE stmt

   69 for_stmt: TOKEN_FOR TOKEN_LPAREN opt_assignment TOKEN_SEMI opt_expr TOKEN_SEMI opt_increment TOKEN_RPAREN stmt

   70 return_stmt: TOKEN_RETURN expr

   71 print_stmt: TOKEN_PRINT args

   72 postfix: identifier TOKEN_POSTFIX_ADD
   73        | identifier TOKEN_POSTFIX_MINUS

   74 opt_assignment: assignment
   75               | %empty

   76 opt_expr: expr
   77         | %empty

   78 opt_increment: assignment
   79              | postfix
   80              | %empty

   81 literal: TOKEN_TRUE
   82        | TOKEN_FALSE
   83        | TOKEN_LITERAL_INT
   84        | TOKEN_LITERAL_CHAR
   85        | TOKEN_LITERAL_STRING

   86 atomic_type: TOKEN_BOOLEAN
   87            | TOKEN_INTEGER
   88            | TOKEN_CHAR
   89            | TOKEN_STRING

   90 return_type: atomic_type
   91            | TOKEN_VOID

   92 relational_op: TOKEN_EQUAL
   93              | TOKEN_NOT_EQUAL
   94              | TOKEN_GREATER
   95              | TOKEN_GREATER_EQUAL
   96              | TOKEN_LESS
   97              | TOKEN_LESS_EQUAL

   98 logical_op: TOKEN_LOGICAL_AND
   99           | TOKEN_LOGICAL_OR


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_ARRAY (258) 8 9 22
TOKEN_BOOLEAN (259) 86
TOKEN_CHAR (260) 88
TOKEN_ELSE (261) 68
TOKEN_FALSE (262) 82
TOKEN_FOR (263) 69
TOKEN_FUNCTION (264) 14 15
TOKEN_IF (265) 67 68
TOKEN_INTEGER (266) 87
TOKEN_PRINT (267) 71
TOKEN_RETURN (268) 70
TOKEN_STRING (269) 89
TOKEN_TRUE (270) 81
TOKEN_VOID (271) 91
TOKEN_WHILE (272)
TOKEN_LITERAL_INT (273) 10 83
TOKEN_LITERAL_CHAR (274) 84
TOKEN_LITERAL_STRING (275) 85
TOKEN_IDENT (276) 44
TOKEN_POSTFIX_ADD (277) 72
TOKEN_POSTFIX_MINUS (278) 73
TOKEN_GREATER_EQUAL (279) 95
TOKEN_LESS_EQUAL (280) 97
TOKEN_EQUAL (281) 92
TOKEN_NOT_EQUAL (282) 93
TOKEN_NOT (283) 65
TOKEN_LOGICAL_AND (284) 98
TOKEN_LOGICAL_OR (285) 99
TOKEN_LPAREN (286) 14 15 36 59 67 68 69
TOKEN_RPAREN (287) 14 15 36 59 67 68 69
TOKEN_LBRACKET (288) 8 9 22 66
TOKEN_RBRACKET (289) 8 9 22 66
TOKEN_LBRACE (290) 11 34 35
TOKEN_RBRACE (291) 11 34 35
TOKEN_EXPONENTIATION (292) 56
TOKEN_MUL (293) 52
TOKEN_DIV (294) 53
TOKEN_MOD (295) 54
TOKEN_PLUS (296) 49
TOKEN_MINUS (297) 50 58
TOKEN_COMMA (298) 13 20 40
TOKEN_GREATER (299) 94
TOKEN_LESS (300) 96
TOKEN_ASSIGN (301) 7 9 15 42 43
TOKEN_COLON (302) 6 7 8 9 14 15 21 22
TOKEN_SEMI (303) 4 14 25 26 27 28 29 33 69
TOKEN_ERROR (304)
NO_ELSE (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
globals (53)
    on left: 2 3, on right: 1 2
global (54)
    on left: 4 5, on right: 2
var_decl (55)
    on left: 6 7 8 9, on right: 4 26
length (56)
    on left: 10, on right: 8 9
array_init (57)
    on left: 11, on right: 9
val_list (58)
    on left: 12 13, on right: 11 13
function_decl (59)
    on left: 14 15, on right: 5
function_def (60)
    on left: 16, on right: 15
params (61)
    on left: 17 18, on right: 14 15
param_list (62)
    on left: 19 20, on right: 17 20
param (63)
    on left: 21 22, on right: 19 20
stmts (64)
    on left: 23 24, on right: 24 34
stmt (65)
    on left: 25 26 27 28 29 30 31 32 33, on right: 23 24 67 68 69
stmt_block (66)
    on left: 34 35, on right: 16 32
function_call (67)
    on left: 36, on right: 25 64
args (68)
    on left: 37 38, on right: 36 71
arg_list (69)
    on left: 39 40, on right: 37 40
arg (70)
    on left: 41, on right: 39 40
assignment (71)
    on left: 42 43, on right: 27 74 78
identifier (72)
    on left: 44, on right: 6 7 8 9 14 15 21 22 36 42 60 66 72 73
expr (73)
    on left: 45 46, on right: 7 41 42 43 45 58 59 65 66 67 68 70 76
lo_expr (74)
    on left: 47 48, on right: 45 46 47
pm_expr (75)
    on left: 49 50 51, on right: 47 48 49 50
term (76)
    on left: 52 53 54 55, on right: 49 50 51 52 53 54
expon (77)
    on left: 56 57, on right: 52 53 54 55 56
factor (78)
    on left: 58 59 60 61 62 63 64, on right: 56 57
not (79)
    on left: 65, on right: 62
array_element (80)
    on left: 66, on right: 43 63
if_stmt (81)
    on left: 67 68, on right: 30
for_stmt (82)
    on left: 69, on right: 31
return_stmt (83)
    on left: 70, on right: 33
print_stmt (84)
    on left: 71, on right: 29
postfix (85)
    on left: 72 73, on right: 28 79
opt_assignment (86)
    on left: 74 75, on right: 69
opt_expr (87)
    on left: 76 77, on right: 69
opt_increment (88)
    on left: 78 79 80, on right: 69
literal (89)
    on left: 81 82 83 84 85, on right: 12 13 61
atomic_type (90)
    on left: 86 87 88 89, on right: 6 7 8 9 21 22 90
return_type (91)
    on left: 90 91, on right: 14 15
relational_op (92)
    on left: 92 93 94 95 96 97, on right: 47
logical_op (93)
    on left: 98 99, on right: 45


State 0

    0 $accept: . program $end

    TOKEN_IDENT  shift, and go to state 1

    $default  reduce using rule 3 (globals)

    program        go to state 2
    globals        go to state 3
    global         go to state 4
    var_decl       go to state 5
    function_decl  go to state 6
    identifier     go to state 7


State 1

   44 identifier: TOKEN_IDENT .

    $default  reduce using rule 44 (identifier)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 8


State 3

    1 program: globals .

    $default  reduce using rule 1 (program)


State 4

    2 globals: global . globals

    TOKEN_IDENT  shift, and go to state 1

    $default  reduce using rule 3 (globals)

    globals        go to state 9
    global         go to state 4
    var_decl       go to state 5
    function_decl  go to state 6
    identifier     go to state 7


State 5

    4 global: var_decl . TOKEN_SEMI

    TOKEN_SEMI  shift, and go to state 10


State 6

    5 global: function_decl .

    $default  reduce using rule 5 (global)


State 7

    6 var_decl: identifier . TOKEN_COLON atomic_type
    7         | identifier . TOKEN_COLON atomic_type TOKEN_ASSIGN expr
    8         | identifier . TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type
    9         | identifier . TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type TOKEN_ASSIGN array_init
   14 function_decl: identifier . TOKEN_COLON TOKEN_FUNCTION return_type TOKEN_LPAREN params TOKEN_RPAREN TOKEN_SEMI
   15              | identifier . TOKEN_COLON TOKEN_FUNCTION return_type TOKEN_LPAREN params TOKEN_RPAREN TOKEN_ASSIGN function_def

    TOKEN_COLON  shift, and go to state 11


State 8

    0 $accept: program $end .

    $default  accept


State 9

    2 globals: global globals .

    $default  reduce using rule 2 (globals)


State 10

    4 global: var_decl TOKEN_SEMI .

    $default  reduce using rule 4 (global)


State 11

    6 var_decl: identifier TOKEN_COLON . atomic_type
    7         | identifier TOKEN_COLON . atomic_type TOKEN_ASSIGN expr
    8         | identifier TOKEN_COLON . TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type
    9         | identifier TOKEN_COLON . TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type TOKEN_ASSIGN array_init
   14 function_decl: identifier TOKEN_COLON . TOKEN_FUNCTION return_type TOKEN_LPAREN params TOKEN_RPAREN TOKEN_SEMI
   15              | identifier TOKEN_COLON . TOKEN_FUNCTION return_type TOKEN_LPAREN params TOKEN_RPAREN TOKEN_ASSIGN function_def

    TOKEN_ARRAY     shift, and go to state 12
    TOKEN_BOOLEAN   shift, and go to state 13
    TOKEN_CHAR      shift, and go to state 14
    TOKEN_FUNCTION  shift, and go to state 15
    TOKEN_INTEGER   shift, and go to state 16
    TOKEN_STRING    shift, and go to state 17

    atomic_type  go to state 18


State 12

    8 var_decl: identifier TOKEN_COLON TOKEN_ARRAY . TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type
    9         | identifier TOKEN_COLON TOKEN_ARRAY . TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type TOKEN_ASSIGN array_init

    TOKEN_LBRACKET  shift, and go to state 19


State 13

   86 atomic_type: TOKEN_BOOLEAN .

    $default  reduce using rule 86 (atomic_type)


State 14

   88 atomic_type: TOKEN_CHAR .

    $default  reduce using rule 88 (atomic_type)


State 15

   14 function_decl: identifier TOKEN_COLON TOKEN_FUNCTION . return_type TOKEN_LPAREN params TOKEN_RPAREN TOKEN_SEMI
   15              | identifier TOKEN_COLON TOKEN_FUNCTION . return_type TOKEN_LPAREN params TOKEN_RPAREN TOKEN_ASSIGN function_def

    TOKEN_BOOLEAN  shift, and go to state 13
    TOKEN_CHAR     shift, and go to state 14
    TOKEN_INTEGER  shift, and go to state 16
    TOKEN_STRING   shift, and go to state 17
    TOKEN_VOID     shift, and go to state 20

    atomic_type  go to state 21
    return_type  go to state 22


State 16

   87 atomic_type: TOKEN_INTEGER .

    $default  reduce using rule 87 (atomic_type)


State 17

   89 atomic_type: TOKEN_STRING .

    $default  reduce using rule 89 (atomic_type)


State 18

    6 var_decl: identifier TOKEN_COLON atomic_type .
    7         | identifier TOKEN_COLON atomic_type . TOKEN_ASSIGN expr

    TOKEN_ASSIGN  shift, and go to state 23

    $default  reduce using rule 6 (var_decl)


State 19

    8 var_decl: identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET . length TOKEN_RBRACKET atomic_type
    9         | identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET . length TOKEN_RBRACKET atomic_type TOKEN_ASSIGN array_init

    TOKEN_LITERAL_INT  shift, and go to state 24

    length  go to state 25


State 20

   91 return_type: TOKEN_VOID .

    $default  reduce using rule 91 (return_type)


State 21

   90 return_type: atomic_type .

    $default  reduce using rule 90 (return_type)


State 22

   14 function_decl: identifier TOKEN_COLON TOKEN_FUNCTION return_type . TOKEN_LPAREN params TOKEN_RPAREN TOKEN_SEMI
   15              | identifier TOKEN_COLON TOKEN_FUNCTION return_type . TOKEN_LPAREN params TOKEN_RPAREN TOKEN_ASSIGN function_def

    TOKEN_LPAREN  shift, and go to state 26


State 23

    7 var_decl: identifier TOKEN_COLON atomic_type TOKEN_ASSIGN . expr

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    expr           go to state 37
    lo_expr        go to state 38
    pm_expr        go to state 39
    term           go to state 40
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 24

   10 length: TOKEN_LITERAL_INT .

    $default  reduce using rule 10 (length)


State 25

    8 var_decl: identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET length . TOKEN_RBRACKET atomic_type
    9         | identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET length . TOKEN_RBRACKET atomic_type TOKEN_ASSIGN array_init

    TOKEN_RBRACKET  shift, and go to state 46


State 26

   14 function_decl: identifier TOKEN_COLON TOKEN_FUNCTION return_type TOKEN_LPAREN . params TOKEN_RPAREN TOKEN_SEMI
   15              | identifier TOKEN_COLON TOKEN_FUNCTION return_type TOKEN_LPAREN . params TOKEN_RPAREN TOKEN_ASSIGN function_def

    TOKEN_IDENT  shift, and go to state 1

    $default  reduce using rule 18 (params)

    params      go to state 47
    param_list  go to state 48
    param       go to state 49
    identifier  go to state 50


State 27

   82 literal: TOKEN_FALSE .

    $default  reduce using rule 82 (literal)


State 28

   81 literal: TOKEN_TRUE .

    $default  reduce using rule 81 (literal)


State 29

   83 literal: TOKEN_LITERAL_INT .

    $default  reduce using rule 83 (literal)


State 30

   84 literal: TOKEN_LITERAL_CHAR .

    $default  reduce using rule 84 (literal)


State 31

   85 literal: TOKEN_LITERAL_STRING .

    $default  reduce using rule 85 (literal)


State 32

   65 not: TOKEN_NOT . expr

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    expr           go to state 51
    lo_expr        go to state 38
    pm_expr        go to state 39
    term           go to state 40
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 33

   59 factor: TOKEN_LPAREN . expr TOKEN_RPAREN

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    expr           go to state 52
    lo_expr        go to state 38
    pm_expr        go to state 39
    term           go to state 40
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 34

   58 factor: TOKEN_MINUS . expr

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    expr           go to state 53
    lo_expr        go to state 38
    pm_expr        go to state 39
    term           go to state 40
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 35

   64 factor: function_call .

    $default  reduce using rule 64 (factor)


State 36

   36 function_call: identifier . TOKEN_LPAREN args TOKEN_RPAREN
   60 factor: identifier .
   66 array_element: identifier . TOKEN_LBRACKET expr TOKEN_RBRACKET

    TOKEN_LPAREN    shift, and go to state 54
    TOKEN_LBRACKET  shift, and go to state 55

    $default  reduce using rule 60 (factor)


State 37

    7 var_decl: identifier TOKEN_COLON atomic_type TOKEN_ASSIGN expr .
   45 expr: expr . logical_op lo_expr

    TOKEN_LOGICAL_AND  shift, and go to state 56
    TOKEN_LOGICAL_OR   shift, and go to state 57

    $default  reduce using rule 7 (var_decl)

    logical_op  go to state 58


State 38

   46 expr: lo_expr .
   47 lo_expr: lo_expr . relational_op pm_expr

    TOKEN_GREATER_EQUAL  shift, and go to state 59
    TOKEN_LESS_EQUAL     shift, and go to state 60
    TOKEN_EQUAL          shift, and go to state 61
    TOKEN_NOT_EQUAL      shift, and go to state 62
    TOKEN_GREATER        shift, and go to state 63
    TOKEN_LESS           shift, and go to state 64

    TOKEN_GREATER_EQUAL  [reduce using rule 46 (expr)]
    TOKEN_LESS_EQUAL     [reduce using rule 46 (expr)]
    TOKEN_EQUAL          [reduce using rule 46 (expr)]
    TOKEN_NOT_EQUAL      [reduce using rule 46 (expr)]
    TOKEN_GREATER        [reduce using rule 46 (expr)]
    TOKEN_LESS           [reduce using rule 46 (expr)]
    $default             reduce using rule 46 (expr)

    relational_op  go to state 65


State 39

   48 lo_expr: pm_expr .
   49 pm_expr: pm_expr . TOKEN_PLUS term
   50        | pm_expr . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    TOKEN_PLUS   [reduce using rule 48 (lo_expr)]
    TOKEN_MINUS  [reduce using rule 48 (lo_expr)]
    $default     reduce using rule 48 (lo_expr)


State 40

   51 pm_expr: term .
   52 term: term . TOKEN_MUL expon
   53     | term . TOKEN_DIV expon
   54     | term . TOKEN_MOD expon

    TOKEN_MUL  shift, and go to state 68
    TOKEN_DIV  shift, and go to state 69
    TOKEN_MOD  shift, and go to state 70

    TOKEN_MUL  [reduce using rule 51 (pm_expr)]
    TOKEN_DIV  [reduce using rule 51 (pm_expr)]
    TOKEN_MOD  [reduce using rule 51 (pm_expr)]
    $default   reduce using rule 51 (pm_expr)


State 41

   55 term: expon .
   56 expon: expon . TOKEN_EXPONENTIATION factor

    TOKEN_EXPONENTIATION  shift, and go to state 71

    TOKEN_EXPONENTIATION  [reduce using rule 55 (term)]
    $default              reduce using rule 55 (term)


State 42

   57 expon: factor .

    $default  reduce using rule 57 (expon)


State 43

   62 factor: not .

    $default  reduce using rule 62 (factor)


State 44

   63 factor: array_element .

    $default  reduce using rule 63 (factor)


State 45

   61 factor: literal .

    $default  reduce using rule 61 (factor)


State 46

    8 var_decl: identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET . atomic_type
    9         | identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET . atomic_type TOKEN_ASSIGN array_init

    TOKEN_BOOLEAN  shift, and go to state 13
    TOKEN_CHAR     shift, and go to state 14
    TOKEN_INTEGER  shift, and go to state 16
    TOKEN_STRING   shift, and go to state 17

    atomic_type  go to state 72


State 47

   14 function_decl: identifier TOKEN_COLON TOKEN_FUNCTION return_type TOKEN_LPAREN params . TOKEN_RPAREN TOKEN_SEMI
   15              | identifier TOKEN_COLON TOKEN_FUNCTION return_type TOKEN_LPAREN params . TOKEN_RPAREN TOKEN_ASSIGN function_def

    TOKEN_RPAREN  shift, and go to state 73


State 48

   17 params: param_list .

    $default  reduce using rule 17 (params)


State 49

   19 param_list: param .
   20           | param . TOKEN_COMMA param_list

    TOKEN_COMMA  shift, and go to state 74

    $default  reduce using rule 19 (param_list)


State 50

   21 param: identifier . TOKEN_COLON atomic_type
   22      | identifier . TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET TOKEN_RBRACKET atomic_type

    TOKEN_COLON  shift, and go to state 75


State 51

   45 expr: expr . logical_op lo_expr
   65 not: TOKEN_NOT expr .

    TOKEN_LOGICAL_AND  shift, and go to state 56
    TOKEN_LOGICAL_OR   shift, and go to state 57

    TOKEN_LOGICAL_AND  [reduce using rule 65 (not)]
    TOKEN_LOGICAL_OR   [reduce using rule 65 (not)]
    $default           reduce using rule 65 (not)

    logical_op  go to state 58


State 52

   45 expr: expr . logical_op lo_expr
   59 factor: TOKEN_LPAREN expr . TOKEN_RPAREN

    TOKEN_LOGICAL_AND  shift, and go to state 56
    TOKEN_LOGICAL_OR   shift, and go to state 57
    TOKEN_RPAREN       shift, and go to state 76

    logical_op  go to state 58


State 53

   45 expr: expr . logical_op lo_expr
   58 factor: TOKEN_MINUS expr .

    TOKEN_LOGICAL_AND  shift, and go to state 56
    TOKEN_LOGICAL_OR   shift, and go to state 57

    TOKEN_LOGICAL_AND  [reduce using rule 58 (factor)]
    TOKEN_LOGICAL_OR   [reduce using rule 58 (factor)]
    $default           reduce using rule 58 (factor)

    logical_op  go to state 58


State 54

   36 function_call: identifier TOKEN_LPAREN . args TOKEN_RPAREN

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    $default  reduce using rule 38 (args)

    function_call  go to state 35
    args           go to state 77
    arg_list       go to state 78
    arg            go to state 79
    identifier     go to state 36
    expr           go to state 80
    lo_expr        go to state 38
    pm_expr        go to state 39
    term           go to state 40
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 55

   66 array_element: identifier TOKEN_LBRACKET . expr TOKEN_RBRACKET

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    expr           go to state 81
    lo_expr        go to state 38
    pm_expr        go to state 39
    term           go to state 40
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 56

   98 logical_op: TOKEN_LOGICAL_AND .

    $default  reduce using rule 98 (logical_op)


State 57

   99 logical_op: TOKEN_LOGICAL_OR .

    $default  reduce using rule 99 (logical_op)


State 58

   45 expr: expr logical_op . lo_expr

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    lo_expr        go to state 82
    pm_expr        go to state 39
    term           go to state 40
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 59

   95 relational_op: TOKEN_GREATER_EQUAL .

    $default  reduce using rule 95 (relational_op)


State 60

   97 relational_op: TOKEN_LESS_EQUAL .

    $default  reduce using rule 97 (relational_op)


State 61

   92 relational_op: TOKEN_EQUAL .

    $default  reduce using rule 92 (relational_op)


State 62

   93 relational_op: TOKEN_NOT_EQUAL .

    $default  reduce using rule 93 (relational_op)


State 63

   94 relational_op: TOKEN_GREATER .

    $default  reduce using rule 94 (relational_op)


State 64

   96 relational_op: TOKEN_LESS .

    $default  reduce using rule 96 (relational_op)


State 65

   47 lo_expr: lo_expr relational_op . pm_expr

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    pm_expr        go to state 83
    term           go to state 40
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 66

   49 pm_expr: pm_expr TOKEN_PLUS . term

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    term           go to state 84
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 67

   50 pm_expr: pm_expr TOKEN_MINUS . term

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    term           go to state 85
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 68

   52 term: term TOKEN_MUL . expon

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    expon          go to state 86
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 69

   53 term: term TOKEN_DIV . expon

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    expon          go to state 87
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 70

   54 term: term TOKEN_MOD . expon

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    expon          go to state 88
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 71

   56 expon: expon TOKEN_EXPONENTIATION . factor

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    factor         go to state 89
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 72

    8 var_decl: identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type .
    9         | identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type . TOKEN_ASSIGN array_init

    TOKEN_ASSIGN  shift, and go to state 90

    $default  reduce using rule 8 (var_decl)


State 73

   14 function_decl: identifier TOKEN_COLON TOKEN_FUNCTION return_type TOKEN_LPAREN params TOKEN_RPAREN . TOKEN_SEMI
   15              | identifier TOKEN_COLON TOKEN_FUNCTION return_type TOKEN_LPAREN params TOKEN_RPAREN . TOKEN_ASSIGN function_def

    TOKEN_ASSIGN  shift, and go to state 91
    TOKEN_SEMI    shift, and go to state 92


State 74

   20 param_list: param TOKEN_COMMA . param_list

    TOKEN_IDENT  shift, and go to state 1

    param_list  go to state 93
    param       go to state 49
    identifier  go to state 50


State 75

   21 param: identifier TOKEN_COLON . atomic_type
   22      | identifier TOKEN_COLON . TOKEN_ARRAY TOKEN_LBRACKET TOKEN_RBRACKET atomic_type

    TOKEN_ARRAY    shift, and go to state 94
    TOKEN_BOOLEAN  shift, and go to state 13
    TOKEN_CHAR     shift, and go to state 14
    TOKEN_INTEGER  shift, and go to state 16
    TOKEN_STRING   shift, and go to state 17

    atomic_type  go to state 95


State 76

   59 factor: TOKEN_LPAREN expr TOKEN_RPAREN .

    $default  reduce using rule 59 (factor)


State 77

   36 function_call: identifier TOKEN_LPAREN args . TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 96


State 78

   37 args: arg_list .

    $default  reduce using rule 37 (args)


State 79

   39 arg_list: arg .
   40         | arg . TOKEN_COMMA arg_list

    TOKEN_COMMA  shift, and go to state 97

    $default  reduce using rule 39 (arg_list)


State 80

   41 arg: expr .
   45 expr: expr . logical_op lo_expr

    TOKEN_LOGICAL_AND  shift, and go to state 56
    TOKEN_LOGICAL_OR   shift, and go to state 57

    $default  reduce using rule 41 (arg)

    logical_op  go to state 58


State 81

   45 expr: expr . logical_op lo_expr
   66 array_element: identifier TOKEN_LBRACKET expr . TOKEN_RBRACKET

    TOKEN_LOGICAL_AND  shift, and go to state 56
    TOKEN_LOGICAL_OR   shift, and go to state 57
    TOKEN_RBRACKET     shift, and go to state 98

    logical_op  go to state 58


State 82

   45 expr: expr logical_op lo_expr .
   47 lo_expr: lo_expr . relational_op pm_expr

    TOKEN_GREATER_EQUAL  shift, and go to state 59
    TOKEN_LESS_EQUAL     shift, and go to state 60
    TOKEN_EQUAL          shift, and go to state 61
    TOKEN_NOT_EQUAL      shift, and go to state 62
    TOKEN_GREATER        shift, and go to state 63
    TOKEN_LESS           shift, and go to state 64

    TOKEN_GREATER_EQUAL  [reduce using rule 45 (expr)]
    TOKEN_LESS_EQUAL     [reduce using rule 45 (expr)]
    TOKEN_EQUAL          [reduce using rule 45 (expr)]
    TOKEN_NOT_EQUAL      [reduce using rule 45 (expr)]
    TOKEN_GREATER        [reduce using rule 45 (expr)]
    TOKEN_LESS           [reduce using rule 45 (expr)]
    $default             reduce using rule 45 (expr)

    relational_op  go to state 65


State 83

   47 lo_expr: lo_expr relational_op pm_expr .
   49 pm_expr: pm_expr . TOKEN_PLUS term
   50        | pm_expr . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    TOKEN_PLUS   [reduce using rule 47 (lo_expr)]
    TOKEN_MINUS  [reduce using rule 47 (lo_expr)]
    $default     reduce using rule 47 (lo_expr)


State 84

   49 pm_expr: pm_expr TOKEN_PLUS term .
   52 term: term . TOKEN_MUL expon
   53     | term . TOKEN_DIV expon
   54     | term . TOKEN_MOD expon

    TOKEN_MUL  shift, and go to state 68
    TOKEN_DIV  shift, and go to state 69
    TOKEN_MOD  shift, and go to state 70

    TOKEN_MUL  [reduce using rule 49 (pm_expr)]
    TOKEN_DIV  [reduce using rule 49 (pm_expr)]
    TOKEN_MOD  [reduce using rule 49 (pm_expr)]
    $default   reduce using rule 49 (pm_expr)


State 85

   50 pm_expr: pm_expr TOKEN_MINUS term .
   52 term: term . TOKEN_MUL expon
   53     | term . TOKEN_DIV expon
   54     | term . TOKEN_MOD expon

    TOKEN_MUL  shift, and go to state 68
    TOKEN_DIV  shift, and go to state 69
    TOKEN_MOD  shift, and go to state 70

    TOKEN_MUL  [reduce using rule 50 (pm_expr)]
    TOKEN_DIV  [reduce using rule 50 (pm_expr)]
    TOKEN_MOD  [reduce using rule 50 (pm_expr)]
    $default   reduce using rule 50 (pm_expr)


State 86

   52 term: term TOKEN_MUL expon .
   56 expon: expon . TOKEN_EXPONENTIATION factor

    TOKEN_EXPONENTIATION  shift, and go to state 71

    TOKEN_EXPONENTIATION  [reduce using rule 52 (term)]
    $default              reduce using rule 52 (term)


State 87

   53 term: term TOKEN_DIV expon .
   56 expon: expon . TOKEN_EXPONENTIATION factor

    TOKEN_EXPONENTIATION  shift, and go to state 71

    TOKEN_EXPONENTIATION  [reduce using rule 53 (term)]
    $default              reduce using rule 53 (term)


State 88

   54 term: term TOKEN_MOD expon .
   56 expon: expon . TOKEN_EXPONENTIATION factor

    TOKEN_EXPONENTIATION  shift, and go to state 71

    TOKEN_EXPONENTIATION  [reduce using rule 54 (term)]
    $default              reduce using rule 54 (term)


State 89

   56 expon: expon TOKEN_EXPONENTIATION factor .

    $default  reduce using rule 56 (expon)


State 90

    9 var_decl: identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type TOKEN_ASSIGN . array_init

    TOKEN_LBRACE  shift, and go to state 99

    array_init  go to state 100


State 91

   15 function_decl: identifier TOKEN_COLON TOKEN_FUNCTION return_type TOKEN_LPAREN params TOKEN_RPAREN TOKEN_ASSIGN . function_def

    TOKEN_LBRACE  shift, and go to state 101

    function_def  go to state 102
    stmt_block    go to state 103


State 92

   14 function_decl: identifier TOKEN_COLON TOKEN_FUNCTION return_type TOKEN_LPAREN params TOKEN_RPAREN TOKEN_SEMI .

    $default  reduce using rule 14 (function_decl)


State 93

   20 param_list: param TOKEN_COMMA param_list .

    $default  reduce using rule 20 (param_list)


State 94

   22 param: identifier TOKEN_COLON TOKEN_ARRAY . TOKEN_LBRACKET TOKEN_RBRACKET atomic_type

    TOKEN_LBRACKET  shift, and go to state 104


State 95

   21 param: identifier TOKEN_COLON atomic_type .

    $default  reduce using rule 21 (param)


State 96

   36 function_call: identifier TOKEN_LPAREN args TOKEN_RPAREN .

    $default  reduce using rule 36 (function_call)


State 97

   40 arg_list: arg TOKEN_COMMA . arg_list

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    arg_list       go to state 105
    arg            go to state 79
    identifier     go to state 36
    expr           go to state 80
    lo_expr        go to state 38
    pm_expr        go to state 39
    term           go to state 40
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 98

   66 array_element: identifier TOKEN_LBRACKET expr TOKEN_RBRACKET .

    $default  reduce using rule 66 (array_element)


State 99

   11 array_init: TOKEN_LBRACE . val_list TOKEN_RBRACE

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31

    val_list  go to state 106
    literal   go to state 107


State 100

    9 var_decl: identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type TOKEN_ASSIGN array_init .

    $default  reduce using rule 9 (var_decl)


State 101

   34 stmt_block: TOKEN_LBRACE . stmts TOKEN_RBRACE
   35           | TOKEN_LBRACE . TOKEN_RBRACE

    TOKEN_FOR     shift, and go to state 108
    TOKEN_IF      shift, and go to state 109
    TOKEN_PRINT   shift, and go to state 110
    TOKEN_RETURN  shift, and go to state 111
    TOKEN_IDENT   shift, and go to state 1
    TOKEN_LBRACE  shift, and go to state 101
    TOKEN_RBRACE  shift, and go to state 112

    var_decl       go to state 113
    stmts          go to state 114
    stmt           go to state 115
    stmt_block     go to state 116
    function_call  go to state 117
    assignment     go to state 118
    identifier     go to state 119
    array_element  go to state 120
    if_stmt        go to state 121
    for_stmt       go to state 122
    return_stmt    go to state 123
    print_stmt     go to state 124
    postfix        go to state 125


State 102

   15 function_decl: identifier TOKEN_COLON TOKEN_FUNCTION return_type TOKEN_LPAREN params TOKEN_RPAREN TOKEN_ASSIGN function_def .

    $default  reduce using rule 15 (function_decl)


State 103

   16 function_def: stmt_block .

    $default  reduce using rule 16 (function_def)


State 104

   22 param: identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET . TOKEN_RBRACKET atomic_type

    TOKEN_RBRACKET  shift, and go to state 126


State 105

   40 arg_list: arg TOKEN_COMMA arg_list .

    $default  reduce using rule 40 (arg_list)


State 106

   11 array_init: TOKEN_LBRACE val_list . TOKEN_RBRACE

    TOKEN_RBRACE  shift, and go to state 127


State 107

   12 val_list: literal .
   13         | literal . TOKEN_COMMA val_list

    TOKEN_COMMA  shift, and go to state 128

    $default  reduce using rule 12 (val_list)


State 108

   69 for_stmt: TOKEN_FOR . TOKEN_LPAREN opt_assignment TOKEN_SEMI opt_expr TOKEN_SEMI opt_increment TOKEN_RPAREN stmt

    TOKEN_LPAREN  shift, and go to state 129


State 109

   67 if_stmt: TOKEN_IF . TOKEN_LPAREN expr TOKEN_RPAREN stmt
   68        | TOKEN_IF . TOKEN_LPAREN expr TOKEN_RPAREN stmt TOKEN_ELSE stmt

    TOKEN_LPAREN  shift, and go to state 130


State 110

   71 print_stmt: TOKEN_PRINT . args

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    $default  reduce using rule 38 (args)

    function_call  go to state 35
    args           go to state 131
    arg_list       go to state 78
    arg            go to state 79
    identifier     go to state 36
    expr           go to state 80
    lo_expr        go to state 38
    pm_expr        go to state 39
    term           go to state 40
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 111

   70 return_stmt: TOKEN_RETURN . expr

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    expr           go to state 132
    lo_expr        go to state 38
    pm_expr        go to state 39
    term           go to state 40
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 112

   35 stmt_block: TOKEN_LBRACE TOKEN_RBRACE .

    $default  reduce using rule 35 (stmt_block)


State 113

   26 stmt: var_decl . TOKEN_SEMI

    TOKEN_SEMI  shift, and go to state 133


State 114

   34 stmt_block: TOKEN_LBRACE stmts . TOKEN_RBRACE

    TOKEN_RBRACE  shift, and go to state 134


State 115

   23 stmts: stmt .
   24      | stmt . stmts

    TOKEN_FOR     shift, and go to state 108
    TOKEN_IF      shift, and go to state 109
    TOKEN_PRINT   shift, and go to state 110
    TOKEN_RETURN  shift, and go to state 111
    TOKEN_IDENT   shift, and go to state 1
    TOKEN_LBRACE  shift, and go to state 101

    $default  reduce using rule 23 (stmts)

    var_decl       go to state 113
    stmts          go to state 135
    stmt           go to state 115
    stmt_block     go to state 116
    function_call  go to state 117
    assignment     go to state 118
    identifier     go to state 119
    array_element  go to state 120
    if_stmt        go to state 121
    for_stmt       go to state 122
    return_stmt    go to state 123
    print_stmt     go to state 124
    postfix        go to state 125


State 116

   32 stmt: stmt_block .

    $default  reduce using rule 32 (stmt)


State 117

   25 stmt: function_call . TOKEN_SEMI

    TOKEN_SEMI  shift, and go to state 136


State 118

   27 stmt: assignment . TOKEN_SEMI

    TOKEN_SEMI  shift, and go to state 137


State 119

    6 var_decl: identifier . TOKEN_COLON atomic_type
    7         | identifier . TOKEN_COLON atomic_type TOKEN_ASSIGN expr
    8         | identifier . TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type
    9         | identifier . TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type TOKEN_ASSIGN array_init
   36 function_call: identifier . TOKEN_LPAREN args TOKEN_RPAREN
   42 assignment: identifier . TOKEN_ASSIGN expr
   66 array_element: identifier . TOKEN_LBRACKET expr TOKEN_RBRACKET
   72 postfix: identifier . TOKEN_POSTFIX_ADD
   73        | identifier . TOKEN_POSTFIX_MINUS

    TOKEN_POSTFIX_ADD    shift, and go to state 138
    TOKEN_POSTFIX_MINUS  shift, and go to state 139
    TOKEN_LPAREN         shift, and go to state 54
    TOKEN_LBRACKET       shift, and go to state 55
    TOKEN_ASSIGN         shift, and go to state 140
    TOKEN_COLON          shift, and go to state 141


State 120

   43 assignment: array_element . TOKEN_ASSIGN expr

    TOKEN_ASSIGN  shift, and go to state 142


State 121

   30 stmt: if_stmt .

    $default  reduce using rule 30 (stmt)


State 122

   31 stmt: for_stmt .

    $default  reduce using rule 31 (stmt)


State 123

   33 stmt: return_stmt . TOKEN_SEMI

    TOKEN_SEMI  shift, and go to state 143


State 124

   29 stmt: print_stmt . TOKEN_SEMI

    TOKEN_SEMI  shift, and go to state 144


State 125

   28 stmt: postfix . TOKEN_SEMI

    TOKEN_SEMI  shift, and go to state 145


State 126

   22 param: identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET TOKEN_RBRACKET . atomic_type

    TOKEN_BOOLEAN  shift, and go to state 13
    TOKEN_CHAR     shift, and go to state 14
    TOKEN_INTEGER  shift, and go to state 16
    TOKEN_STRING   shift, and go to state 17

    atomic_type  go to state 146


State 127

   11 array_init: TOKEN_LBRACE val_list TOKEN_RBRACE .

    $default  reduce using rule 11 (array_init)


State 128

   13 val_list: literal TOKEN_COMMA . val_list

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31

    val_list  go to state 147
    literal   go to state 107


State 129

   69 for_stmt: TOKEN_FOR TOKEN_LPAREN . opt_assignment TOKEN_SEMI opt_expr TOKEN_SEMI opt_increment TOKEN_RPAREN stmt

    TOKEN_IDENT  shift, and go to state 1

    $default  reduce using rule 75 (opt_assignment)

    assignment      go to state 148
    identifier      go to state 149
    array_element   go to state 120
    opt_assignment  go to state 150


State 130

   67 if_stmt: TOKEN_IF TOKEN_LPAREN . expr TOKEN_RPAREN stmt
   68        | TOKEN_IF TOKEN_LPAREN . expr TOKEN_RPAREN stmt TOKEN_ELSE stmt

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    expr           go to state 151
    lo_expr        go to state 38
    pm_expr        go to state 39
    term           go to state 40
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 131

   71 print_stmt: TOKEN_PRINT args .

    $default  reduce using rule 71 (print_stmt)


State 132

   45 expr: expr . logical_op lo_expr
   70 return_stmt: TOKEN_RETURN expr .

    TOKEN_LOGICAL_AND  shift, and go to state 56
    TOKEN_LOGICAL_OR   shift, and go to state 57

    $default  reduce using rule 70 (return_stmt)

    logical_op  go to state 58


State 133

   26 stmt: var_decl TOKEN_SEMI .

    $default  reduce using rule 26 (stmt)


State 134

   34 stmt_block: TOKEN_LBRACE stmts TOKEN_RBRACE .

    $default  reduce using rule 34 (stmt_block)


State 135

   24 stmts: stmt stmts .

    $default  reduce using rule 24 (stmts)


State 136

   25 stmt: function_call TOKEN_SEMI .

    $default  reduce using rule 25 (stmt)


State 137

   27 stmt: assignment TOKEN_SEMI .

    $default  reduce using rule 27 (stmt)


State 138

   72 postfix: identifier TOKEN_POSTFIX_ADD .

    $default  reduce using rule 72 (postfix)


State 139

   73 postfix: identifier TOKEN_POSTFIX_MINUS .

    $default  reduce using rule 73 (postfix)


State 140

   42 assignment: identifier TOKEN_ASSIGN . expr

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    expr           go to state 152
    lo_expr        go to state 38
    pm_expr        go to state 39
    term           go to state 40
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 141

    6 var_decl: identifier TOKEN_COLON . atomic_type
    7         | identifier TOKEN_COLON . atomic_type TOKEN_ASSIGN expr
    8         | identifier TOKEN_COLON . TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type
    9         | identifier TOKEN_COLON . TOKEN_ARRAY TOKEN_LBRACKET length TOKEN_RBRACKET atomic_type TOKEN_ASSIGN array_init

    TOKEN_ARRAY    shift, and go to state 12
    TOKEN_BOOLEAN  shift, and go to state 13
    TOKEN_CHAR     shift, and go to state 14
    TOKEN_INTEGER  shift, and go to state 16
    TOKEN_STRING   shift, and go to state 17

    atomic_type  go to state 18


State 142

   43 assignment: array_element TOKEN_ASSIGN . expr

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    function_call  go to state 35
    identifier     go to state 36
    expr           go to state 153
    lo_expr        go to state 38
    pm_expr        go to state 39
    term           go to state 40
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    literal        go to state 45


State 143

   33 stmt: return_stmt TOKEN_SEMI .

    $default  reduce using rule 33 (stmt)


State 144

   29 stmt: print_stmt TOKEN_SEMI .

    $default  reduce using rule 29 (stmt)


State 145

   28 stmt: postfix TOKEN_SEMI .

    $default  reduce using rule 28 (stmt)


State 146

   22 param: identifier TOKEN_COLON TOKEN_ARRAY TOKEN_LBRACKET TOKEN_RBRACKET atomic_type .

    $default  reduce using rule 22 (param)


State 147

   13 val_list: literal TOKEN_COMMA val_list .

    $default  reduce using rule 13 (val_list)


State 148

   74 opt_assignment: assignment .

    $default  reduce using rule 74 (opt_assignment)


State 149

   42 assignment: identifier . TOKEN_ASSIGN expr
   66 array_element: identifier . TOKEN_LBRACKET expr TOKEN_RBRACKET

    TOKEN_LBRACKET  shift, and go to state 55
    TOKEN_ASSIGN    shift, and go to state 140


State 150

   69 for_stmt: TOKEN_FOR TOKEN_LPAREN opt_assignment . TOKEN_SEMI opt_expr TOKEN_SEMI opt_increment TOKEN_RPAREN stmt

    TOKEN_SEMI  shift, and go to state 154


State 151

   45 expr: expr . logical_op lo_expr
   67 if_stmt: TOKEN_IF TOKEN_LPAREN expr . TOKEN_RPAREN stmt
   68        | TOKEN_IF TOKEN_LPAREN expr . TOKEN_RPAREN stmt TOKEN_ELSE stmt

    TOKEN_LOGICAL_AND  shift, and go to state 56
    TOKEN_LOGICAL_OR   shift, and go to state 57
    TOKEN_RPAREN       shift, and go to state 155

    logical_op  go to state 58


State 152

   42 assignment: identifier TOKEN_ASSIGN expr .
   45 expr: expr . logical_op lo_expr

    TOKEN_LOGICAL_AND  shift, and go to state 56
    TOKEN_LOGICAL_OR   shift, and go to state 57

    $default  reduce using rule 42 (assignment)

    logical_op  go to state 58


State 153

   43 assignment: array_element TOKEN_ASSIGN expr .
   45 expr: expr . logical_op lo_expr

    TOKEN_LOGICAL_AND  shift, and go to state 56
    TOKEN_LOGICAL_OR   shift, and go to state 57

    $default  reduce using rule 43 (assignment)

    logical_op  go to state 58


State 154

   69 for_stmt: TOKEN_FOR TOKEN_LPAREN opt_assignment TOKEN_SEMI . opt_expr TOKEN_SEMI opt_increment TOKEN_RPAREN stmt

    TOKEN_FALSE           shift, and go to state 27
    TOKEN_TRUE            shift, and go to state 28
    TOKEN_LITERAL_INT     shift, and go to state 29
    TOKEN_LITERAL_CHAR    shift, and go to state 30
    TOKEN_LITERAL_STRING  shift, and go to state 31
    TOKEN_IDENT           shift, and go to state 1
    TOKEN_NOT             shift, and go to state 32
    TOKEN_LPAREN          shift, and go to state 33
    TOKEN_MINUS           shift, and go to state 34

    $default  reduce using rule 77 (opt_expr)

    function_call  go to state 35
    identifier     go to state 36
    expr           go to state 156
    lo_expr        go to state 38
    pm_expr        go to state 39
    term           go to state 40
    expon          go to state 41
    factor         go to state 42
    not            go to state 43
    array_element  go to state 44
    opt_expr       go to state 157
    literal        go to state 45


State 155

   67 if_stmt: TOKEN_IF TOKEN_LPAREN expr TOKEN_RPAREN . stmt
   68        | TOKEN_IF TOKEN_LPAREN expr TOKEN_RPAREN . stmt TOKEN_ELSE stmt

    TOKEN_FOR     shift, and go to state 108
    TOKEN_IF      shift, and go to state 109
    TOKEN_PRINT   shift, and go to state 110
    TOKEN_RETURN  shift, and go to state 111
    TOKEN_IDENT   shift, and go to state 1
    TOKEN_LBRACE  shift, and go to state 101

    var_decl       go to state 113
    stmt           go to state 158
    stmt_block     go to state 116
    function_call  go to state 117
    assignment     go to state 118
    identifier     go to state 119
    array_element  go to state 120
    if_stmt        go to state 121
    for_stmt       go to state 122
    return_stmt    go to state 123
    print_stmt     go to state 124
    postfix        go to state 125


State 156

   45 expr: expr . logical_op lo_expr
   76 opt_expr: expr .

    TOKEN_LOGICAL_AND  shift, and go to state 56
    TOKEN_LOGICAL_OR   shift, and go to state 57

    $default  reduce using rule 76 (opt_expr)

    logical_op  go to state 58


State 157

   69 for_stmt: TOKEN_FOR TOKEN_LPAREN opt_assignment TOKEN_SEMI opt_expr . TOKEN_SEMI opt_increment TOKEN_RPAREN stmt

    TOKEN_SEMI  shift, and go to state 159


State 158

   67 if_stmt: TOKEN_IF TOKEN_LPAREN expr TOKEN_RPAREN stmt .
   68        | TOKEN_IF TOKEN_LPAREN expr TOKEN_RPAREN stmt . TOKEN_ELSE stmt

    TOKEN_ELSE  shift, and go to state 160

    $default  reduce using rule 67 (if_stmt)


State 159

   69 for_stmt: TOKEN_FOR TOKEN_LPAREN opt_assignment TOKEN_SEMI opt_expr TOKEN_SEMI . opt_increment TOKEN_RPAREN stmt

    TOKEN_IDENT  shift, and go to state 1

    $default  reduce using rule 80 (opt_increment)

    assignment     go to state 161
    identifier     go to state 162
    array_element  go to state 120
    postfix        go to state 163
    opt_increment  go to state 164


State 160

   68 if_stmt: TOKEN_IF TOKEN_LPAREN expr TOKEN_RPAREN stmt TOKEN_ELSE . stmt

    TOKEN_FOR     shift, and go to state 108
    TOKEN_IF      shift, and go to state 109
    TOKEN_PRINT   shift, and go to state 110
    TOKEN_RETURN  shift, and go to state 111
    TOKEN_IDENT   shift, and go to state 1
    TOKEN_LBRACE  shift, and go to state 101

    var_decl       go to state 113
    stmt           go to state 165
    stmt_block     go to state 116
    function_call  go to state 117
    assignment     go to state 118
    identifier     go to state 119
    array_element  go to state 120
    if_stmt        go to state 121
    for_stmt       go to state 122
    return_stmt    go to state 123
    print_stmt     go to state 124
    postfix        go to state 125


State 161

   78 opt_increment: assignment .

    $default  reduce using rule 78 (opt_increment)


State 162

   42 assignment: identifier . TOKEN_ASSIGN expr
   66 array_element: identifier . TOKEN_LBRACKET expr TOKEN_RBRACKET
   72 postfix: identifier . TOKEN_POSTFIX_ADD
   73        | identifier . TOKEN_POSTFIX_MINUS

    TOKEN_POSTFIX_ADD    shift, and go to state 138
    TOKEN_POSTFIX_MINUS  shift, and go to state 139
    TOKEN_LBRACKET       shift, and go to state 55
    TOKEN_ASSIGN         shift, and go to state 140


State 163

   79 opt_increment: postfix .

    $default  reduce using rule 79 (opt_increment)


State 164

   69 for_stmt: TOKEN_FOR TOKEN_LPAREN opt_assignment TOKEN_SEMI opt_expr TOKEN_SEMI opt_increment . TOKEN_RPAREN stmt

    TOKEN_RPAREN  shift, and go to state 166


State 165

   68 if_stmt: TOKEN_IF TOKEN_LPAREN expr TOKEN_RPAREN stmt TOKEN_ELSE stmt .

    $default  reduce using rule 68 (if_stmt)


State 166

   69 for_stmt: TOKEN_FOR TOKEN_LPAREN opt_assignment TOKEN_SEMI opt_expr TOKEN_SEMI opt_increment TOKEN_RPAREN . stmt

    TOKEN_FOR     shift, and go to state 108
    TOKEN_IF      shift, and go to state 109
    TOKEN_PRINT   shift, and go to state 110
    TOKEN_RETURN  shift, and go to state 111
    TOKEN_IDENT   shift, and go to state 1
    TOKEN_LBRACE  shift, and go to state 101

    var_decl       go to state 113
    stmt           go to state 167
    stmt_block     go to state 116
    function_call  go to state 117
    assignment     go to state 118
    identifier     go to state 119
    array_element  go to state 120
    if_stmt        go to state 121
    for_stmt       go to state 122
    return_stmt    go to state 123
    print_stmt     go to state 124
    postfix        go to state 125


State 167

   69 for_stmt: TOKEN_FOR TOKEN_LPAREN opt_assignment TOKEN_SEMI opt_expr TOKEN_SEMI opt_increment TOKEN_RPAREN stmt .

    $default  reduce using rule 69 (for_stmt)
